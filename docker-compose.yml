version: '3.7'
services:
  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: docker/frontend.dockerfile
      target: dev
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run build-watch
  checks:
    image: 'hack_checks'
    build:
      context: .
      dockerfile: docker/checks.dockerfile

  flake8:
    image: 'hack_checks'
    container_name: flake8
    command: flake8 --config=tox.ini .
    volumes:
      - type: bind
        source: .
        target: /app
        read_only: true

  mypy:
    image: 'hack_checks'
    container_name: mypy
    command: mypy --ignore-missing-imports hack tests
    volumes:
      - type: bind
        source: .
        target: /app
        read_only: true

  pytest:
    image: 'hack_checks'
    container_name: pytest
    command: pytest -vv tests -p no:cacheprovider
    profiles: [ "test" ]
    volumes:
      - type: bind
        source: .
        target: /app
        read_only: true
    ports:
      - '8081:8081'
  backend:
    depends_on:
      - frontend
      - postgres
      - redis

    container_name: backend
    build:
      context: .
      dockerfile: docker/backend.dockerfile
      target: dev
    ports:
      - '8080:8080'
    volumes:
      - .:/app

  redis:
    container_name: redis
    image: redis:6.0.5-alpine
    restart: on-failure
    ports:
        - 6379:6379
    volumes: 
        - redis-data:/data

  postgres:
    container_name: postgres
    image: postgres:14-alpine
    restart: on-failure
    ports:
        - 5432:5432
    volumes: 
        - postgres-data:/var/lib/postgresql/data


volumes:
    postgres-data:
    redis-data: